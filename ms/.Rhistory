library(lattice)
library(reshape)
#thro = read.csv(stringsAsFactors=F, row.names=NULL, "/home/wyu/Projects/R/data/sputum_thro_59881.csv")
dir = "/home/wyu/Projects/R/ms/data/ms.qc"
fileNames = list.files(dir)
rawData = lapply(fileNames, function(fileName){read.csv(paste(dir,"/",fileName,sep=""),stringsAsFactors=FALSE)})
names(rawData) = sub(".csv","",fileNames)
thro = do.call("rbind", rawData); rm(rawData, fileNames)
# remove the row col
thro$row     = NULL
# set the default loading to 1ug for the sputum samples
thro[thro$id.prj==2862&is.na(thro$loading),]$loading = 1
# convert the columns
thro$id.run  = as.factor(thro$id.run)
thro$id.prj  = as.factor(thro$id.prj)
thro$id.expt = as.factor(thro$id.expt)
thro$rt.pct  = as.numeric(thro$rt.pct)
thro$rt      = as.numeric(thro$rt)
thro$width   = as.numeric(thro$width)
thro$annot   = as.logical(thro$annot)
thro$loading = as.factor(thro$loading)
# prepare the list of runs
md = melt(thro, id=c("id.run", "id.prj", "id.expt", "rt", "rt.pct", "slice", "loading", "annot", "name", "desc", "width"))
runs = cast(md, id.run+id.expt+id.prj+name+desc+loading ~ .)
plotParam = list(
stim = simpleTheme(pch = c(15:20),
lty = c(2,1,3,3,2, 2,1,2,2,1, 2,1,2,1),
lwd = c(2,2,1,1,2,2,2,2,2,2,2,2,2,2,2,1),
cex = c(1.5),
col=c(rep("purple",4),rep("blue",3),rep("green",3),rep("yellow",3),rep("orange",3),rep("red",4))),
thin3  = simpleTheme(pch=c(19, 12, 22),cex=1.25,lwd=1,col=c("red","darkgreen","blue")),
thin6  = simpleTheme(pch=c(19, 12, 22),cex=0.8,lwd=0.8,col=c("red","darkgreen","blue")),
thin   = simpleTheme(pch=c(10:22),cex=0.8,lwd=0.8),
thin6.vert.x = simpleTheme(pch=c(19, 12, 22),cex=0.8,lwd=0.8,col=c("red","darkgreen","blue")),
chart.layout = c(3,2))
sputum = subset(thro, id.prj==2862&desc!="Velos Orbitrap")
library(lattice)
library(reshape)
#thro = read.csv(stringsAsFactors=F, row.names=NULL, "/home/wyu/Projects/R/data/sputum_thro_59881.csv")
dir = "/home/wyu/Projects/R/ms/data/ms.qc"
fileNames = list.files(dir)
rawData = lapply(fileNames, function(fileName){read.csv(paste(dir,"/",fileName,sep=""),stringsAsFactors=FALSE)})
names(rawData) = sub(".csv","",fileNames)
thro = do.call("rbind", rawData); rm(rawData, fileNames)
# remove the row col
thro$row     = NULL
# set the default loading to 1ug for the sputum samples
thro[thro$id.prj==2862&is.na(thro$loading),]$loading = 1
# convert the columns
thro$id.run  = as.factor(thro$id.run)
thro$id.prj  = as.factor(thro$id.prj)
thro$id.expt = as.factor(thro$id.expt)
thro$rt.pct  = as.numeric(thro$rt.pct)
thro$rt      = as.numeric(thro$rt)
thro$width   = as.numeric(thro$width)
thro$annot   = as.logical(thro$annot)
thro$loading = as.factor(thro$loading)
# prepare the list of runs
md = melt(thro, id=c("id.run", "id.prj", "id.expt", "rt", "rt.pct", "slice", "loading", "annot", "name", "desc", "width"))
runs = cast(md, id.run+id.expt+id.prj+name+desc+loading ~ .)
fix(runs)
View(runs)
thro[thro$name=="Or2013_0513_CF_03", ]
thro[thro$name=="Or2013_0513_CF_03", ]$desc = "post repair"
thro[thro$name=="Or2013_0513_CF_04", ]$desc = "post repair"
# remove the row col
thro$row     = NULL
# set the default loading to 1ug for the sputum samples
thro[thro$id.prj==2862&is.na(thro$loading),]$loading = 1
# convert the columns
thro$id.run  = as.factor(thro$id.run)
thro$id.prj  = as.factor(thro$id.prj)
thro$id.expt = as.factor(thro$id.expt)
thro$rt.pct  = as.numeric(thro$rt.pct)
thro$rt      = as.numeric(thro$rt)
thro$width   = as.numeric(thro$width)
thro$annot   = as.logical(thro$annot)
thro$loading = as.factor(thro$loading)
# prepare the list of runs
md = melt(thro, id=c("id.run", "id.prj", "id.expt", "rt", "rt.pct", "slice", "loading", "annot", "name", "desc", "width"))
runs = cast(md, id.run+id.expt+id.prj+name+desc+loading ~ .)
fix(runs)
View(runs)
thro[thro$id.prj==2862&is.na(thro$loading),]$loading
plotParam = list(
stim = simpleTheme(pch = c(15:20),
lty = c(2,1,3,3,2, 2,1,2,2,1, 2,1,2,1),
lwd = c(2,2,1,1,2,2,2,2,2,2,2,2,2,2,2,1),
cex = c(1.5),
col=c(rep("purple",4),rep("blue",3),rep("green",3),rep("yellow",3),rep("orange",3),rep("red",4))),
thin3  = simpleTheme(pch=c(19, 12, 22),cex=1.25,lwd=1,col=c("red","darkgreen","blue")),
thin6  = simpleTheme(pch=c(19, 12, 22),cex=0.8,lwd=0.8,col=c("red","darkgreen","blue")),
thin   = simpleTheme(pch=c(10:22),cex=0.8,lwd=0.8),
thin6.vert.x = simpleTheme(pch=c(19, 12, 22),cex=0.8,lwd=0.8,col=c("red","darkgreen","blue")),
chart.layout = c(3,2))
View(runs)
repairs = subset(thro, id.expt %in% c(35187, 234987))
View(repairs)
xyplot(apex ~ rt.pct|id.expt, group = desc, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(apex ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
repairs = subset(thro, id.expt %in% c(35187, 34987))
xyplot(apex ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(log10(apex) ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(pkw ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
colnames(thro)
xyplot(ppm ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(mz ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(tic ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(err ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(votes ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(vote ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(z ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
repairs$id.expt = as.factor(repairs$id.expt)
xyplot(z ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
repairs$id.expt
unique(repairs$id.expt)
unique(repairs$id.run)
repairs = subset(thro, id.expt==35187|id.expt==34987))
repairs = subset(thro, id.expt==35187|id.expt==34987)
unique(repairs$id.run)
unique(repairs$id.expt)
repairs$id.expt = as.factor(repairs$id.expt)
unique(repairs$id.expt)
xyplot(z ~ rt.pct|desc, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(z ~ rt.pct|desc*id.run, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(z ~ rt.pct|id.run, group = id.expt, data=repairs, auto.key=list(space="top",columns=4), par.settings=plotParam$thin)
xyplot(apex ~ rt.pct|desc, group = id.expt, data=repairs, par.settings=plotParam$thin)
colnames(thro)
xyplot(mass ~ rt.pct|id.run, group = id.expt, data=repairs, par.settings=plotParam$thin)
install.packages("gtools")
library("gtools")
library("gtools")
source("readMaxQuantReport.r")
source('/media/wyu/Padlock/PXD000254, DMSO boosts ESI sensitivity/codes/readMaxQuantReport.r')
dat.src = "/media/wyu/Padlock/PXD000254, DMSO boosts ESI sensitivity/data"
annotated  = readDMSO(dat.src, "msms");
#peptides   = readDMSO(dat.src, "peptides");
proteins   = readDMSO(dat.src, "proteinGroups");
components = readDMSO(dat.src, "allPeptides");
dat.src = "/media/wyu/Padlock/PXD000254, DMSO boosts ESI sensitivity/data/"
annotated  = readDMSO(dat.src, "msms");
#peptides   = readDMSO(dat.src, "peptides");
proteins   = readDMSO(dat.src, "proteinGroups");
components = readDMSO(dat.src, "allPeptides");
dat.src = "/media/wyu/Padlock/PXD000254, DMSO boosts ESI sensitivity/reports/"
annotated  = readDMSO(dat.src, "msms");
proteins   = readDMSO(dat.src, "proteinGroups");
components = readDMSO(dat.src, "allPeptides");
save(annotated,  file=paste(dat.src, "reports/annotated_msms.RData", sep=""))
#save(peptides,   file=paste(dat.src, "reports/peptides.RData", sep=""))
save(proteins,   file=paste(dat.src, "reports/proteins.RData", sep=""))
save(components, file=paste(dat.src, "reports/components.RData", sep=""))
save(annotated,  file=paste(dat.src, "annotated_msms.RData", sep=""))
#save(peptides,   file=paste(dat.src, "reports/peptides.RData", sep=""))
save(proteins,   file=paste(dat.src, "proteins.RData", sep=""))
save(components, file=paste(dat.src, "components.RData", sep=""))
ftable(annotated)
colnames(annotated)
ftable(annotated[,c("instrument","loading")])
ftable(annotated[,c("instrument","DMSO", "loading")])
source('/media/wyu/Padlock/PXD000254, DMSO boosts ESI sensitivity/codes/readMaxQuantReport.r')
annotated  = readDMSO(dat.src, "msms");
#peptides   = readDMSO(dat.src, "peptides");
proteins   = readDMSO(dat.src, "proteinGroups");
components = readDMSO(dat.src, "allPeptides");
save(annotated,  file=paste(dat.src, "annotated_msms.RData", sep=""))
#save(peptides,   file=paste(dat.src, "reports/peptides.RData", sep=""))
save(proteins,   file=paste(dat.src, "proteins.RData", sep=""))
save(components, file=paste(dat.src, "components.RData", sep=""))
ftable(annotated[,c("instrument","DMSO", "loading")])
ftable(proteins[,c("instrument","DMSO", "loading")])
ftable(components[,c("instrument","DMSO", "loading")])
ftable(subset(annotated, sample=="HeLa")[,c("instrument","DMSO", "loading")])
source("/media/wyu/Padlock/PXD000254, DMSO boosts ESI sensitivity/reports/readMaxQuantReport.r")
source("/media/wyu/Padlock/PXD000254, DMSO boosts ESI sensitivity/codes/readMaxQuantReport.r")
load(paste(dat.src, "annotated_msms.RData", sep=""))
colnames(components)
xyplot(Intensity~Retention.time|loading, group = DMSO,
data=components, subset=instrument=="Elite")
library(lattice)
xyplot(Intensity~Retention.time|loading, group = DMSO,
data=components, subset=instrument=="Elite")
components$rtpost = round(components$Retention.Time)
components$Retention.Time
components$Retention.time
components$rtpost = round(components$Retention.time)
?round
components$rtpost = round(as.numeric(components$Retention.time))
colnames(components)
unique(components$Raw.file)
?count
?counts
by_rtpost = list(Raw.file=components$Raw.file, rtpost=components$rtpost)
components.stat = aggregate(x=components, by=by_rtpost, FUN=mean)
install.packages("data.table")
library(data.table)
?library
?data.table
proteins.t = data.table(proteins)
ans = proteins.t[,list(A = sum(count), B = mean(count)), by = c("Raw.file", "rtpost")]
?data.table
ans = proteins.t[,list(A = sum(count), B = mean(count)), by = c('Raw.file, rtpost')]
colnames(proteins)
unique(proteins$report)
ans = proteins.t[,list(A = sum(count), B = mean(count)), by = c('report, rtpost')]
cmps.t = data.table(components)
ans = cmps.t[,list(A = sum(count), B = mean(count)), by = c("Raw.file", "rtpost")]
cmps.t = data.table(components)
ans = cmps.t[,list(A = sum(Intensity), B = mean(Intensity)), by = c("Raw.file", "rtpost")]
components$Intensity = as.numeric(components$Intensity)
cmps.t = data.table(components)
ans = cmps.t[,list(A = sum(Intensity), B = mean(Intensity)), by = c("Raw.file", "rtpost")]
head(ans)
head(components$Retention.time)
head(components$rtpost)
?round
unique(components$rtpost)
head(components$Retention.time)
unique(components$Retention.time)
unique(as.numeric(components$Retention.time))
?as.numeric
unique(numeric(components$Retention.time))
unique(as.numeric(as.character(components$Retention.time)))
?read.csv2
source('/media/wyu/Padlock/PXD000254, DMSO boosts ESI sensitivity/codes/readMaxQuantReport.r')
components$Retention.time = as.numeric(as.character(components$Retention.time))
components$rtpost         = round(components$Retention.time)
components$Intensity      = as.numeric(as.character(components$Intensity))
colnames(components)
components$MS.MS.Count    = as.numeric(as.character(components$MS.MS.Count))
cmps.t = data.table(components)
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity)), MSMS = sum(MS.MS.Count),
by = c("Raw.file", "rtpost, DMSO, loading, sample, instrument, report")]
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c("Raw.file", "rtpost, DMSO, loading, sample, instrument, report")]
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c("Raw.file, rtpost, DMSO, loading, sample, instrument, report")]
components$rtpost         = round(components$Retention.time)
cmps.t = data.table(components)
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c("Raw.file, rtpost, DMSO, loading, sample, instrument, report")]
colnames(cmps.t)
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c('Raw.file, rtpost, DMSO, loading, sample, instrument, report')]
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c('Raw.file')]
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c('Raw.file, DMSO, loading, sample, instrument, report')]
?data.table
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c('Raw.file,rtpost,DMSO,loading,sample,instrument,report')]
View(cmps.s)
xyplot(Avg~rtpost|loading, group = DMSO,
data=cmps.s, subset=instrument=="Elite")
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c('Raw.file,rtpost,DMSO,loading,sample,instrument,report,runtime')]
xyplot(Avg~rtpost|loading, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h")
xyplot(Avg~rtpost|loading, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T,type=c("p","a","g"),
layout=c(1,2), as.table=TRUE,
scale=list(y=list(relation="fixed")),
main="CV of pAKT Measurements from Pre/Post Run Ctrls @ antiIgD=0.5")
?xyplot
xyplot(Avg~rtpost|loading, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T,type=c("p","a","g"),
layout=c(2,2), as.table=TRUE,
scale=list(y=list(relation="same")),
main="CV of pAKT Measurements from Pre/Post Run Ctrls @ antiIgD=0.5")
cmps.t = data.table(subset(components, Charge>1))
cmps.t = data.table(subset(components, Charge>1&MS.MS.Count>0))
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c('Raw.file,rtpost,DMSO,loading,sample,instrument,report,runtime')]
xyplot(Avg~rtpost|loading, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T,type=c("p","a","g"),
layout=c(2,2), as.table=TRUE,
scale=list(y=list(relation="same")),
main="CV of pAKT Measurements from Pre/Post Run Ctrls @ antiIgD=0.5")
cmps.t = data.table(subset(components, Charge>1))
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c('Raw.file,rtpost,DMSO,loading,sample,instrument,report,runtime,MS.MS.Count')]
xyplot(Avg~rtpost|loading*MS.MS.Count, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T,type=c("p","a","g"),
layout=c(2,2), as.table=TRUE,
scale=list(y=list(relation="same")),
main="CV of pAKT Measurements from Pre/Post Run Ctrls @ antiIgD=0.5")
colnames(components)
unique(components$MS.MS.Count)
components$hasMSMS        = components$MS.MS.Count>0
cmps.t = data.table(subset(components, Charge>1))
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c('Raw.file,rtpost,DMSO,loading,sample,instrument,report,runtime,hasMSMS')]
xyplot(Avg~rtpost|loading*hasMSMS, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T,type=c("p","a","g"),
layout=c(2,2), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Avg~rtpost|loading*hasMSMS, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T,type=c("p","a","g"),
layout=c(2,4), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Avg~rtpost|loading*hasMSMS, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T,type=c("p","a","g"),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Counts~rtpost|loading*hasMSMS, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T, type=c("p","a","g"),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Counts")
xyplot(MSMS~rtpost|loading*hasMSMS, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T, type=c("p","a","g"),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Total MSMS")
xyplot(MSMS~rtpost|loading*instrument, group = DMSO,
data=cmps.s, subset=runtime=="1h",
auto.key=T, type=c("p","a","g"),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Total MSMS")
xyplot(MSMS~rtpost|loading, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T, type=c("p","a","g"),
layout=c(4,1), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Total MSMS")
xyplot(MSMS~rtpost|loading, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T, type=c("p"),
layout=c(4,1), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Total MSMS")
xyplot(Counts~rtpost|loading*hasMSMS, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T, type=c("p","a","g"),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Counts of Components with MSMS")
subset(cmps.s, MSMS==0)
j = subset(cmps.s, MSMS==0)
View(j)
source('/media/wyu/Padlock/PXD000254, DMSO boosts ESI sensitivity/codes/readMaxQuantReport.r')
source('/media/wyu/Padlock/PXD000254, DMSO boosts ESI sensitivity/codes/readMaxQuantReport.r')
annotated  = readDMSO(dat.src, "msms");
#peptides   = readDMSO(dat.src, "peptides");
proteins   = readDMSO(dat.src, "proteinGroups");
components = readDMSO(dat.src, "allPeptides");
save(annotated,  file=paste(dat.src, "annotated_msms.RData", sep=""))
#save(peptides,   file=paste(dat.src, "reports/peptides.RData", sep=""))
save(proteins,   file=paste(dat.src, "proteins.RData", sep=""))
save(components, file=paste(dat.src, "components.RData", sep=""))
ftable(subset(annotated, sample=="HeLa")[,c("instrument","additive", "loading")])
ftable(subset(proteins, sample=="HeLa")[,c("instrument","additive", "loading")])
ftable(subset(components, sample=="HeLa")[,c("instrument","additive", "loading")])
# prepare the aggregated stats
components$Retention.time = as.numeric(as.character(components$Retention.time))
components$rtpost         = round(components$Retention.time)
components$Intensity      = as.numeric(as.character(components$Intensity))
components$MS.MS.Count    = as.numeric(as.character(components$MS.MS.Count))
components$hasMSMS        = components$MS.MS.Count>0
cmps.t = data.table(subset(components, Charge>1))
cmps.s = cmps.t[,list(Counts = length(Intensity), Avg = mean(Intensity), MSMS = sum(MS.MS.Count)),
by = c('Raw.file,rtpost,additive,loading,sample,instrument,report,runtime,hasMSMS')]
xyplot(Avg~rtpost|loading*hasMSMS, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Avg~rtpost|loading*hasMSMS, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Avg~rtpost|loading*hasMSMS, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same", equispaced.log=TRUE)),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Avg~rtpost|loading*hasMSMS, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same", equispaced.log=TRUE,log-10)),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Avg~rtpost|loading*hasMSMS, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same", equispaced.log=TRUE,log=10)),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Avg~rtpost|loading*hasMSMS, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same", equispaced.log=TRUE,log=TRUE)),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Counts~rtpost|loading*hasMSMS, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
auto.key=T, type=c("p","a","g"),
layout=c(4,2), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Counts of Components with MSMS")
xyplot(MSMS~rtpost|loading, group = DMSO,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,1), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Total MSMS")
xyplot(MSMS~rtpost|loading, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,1), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Total MSMS")
subset(cmps.s, MSMS==0)$rtpost
unique(subset(cmps.s, MSMS==0)$rtpost)
unique(subset(cmps.s, MSMS==0)$loading)
ftable(subset(cmps.s, MSMS==0))
ftable(subset(cmps.s, MSMS==0)[,c("rtpost","loading")])
unique(subset(cmps.s, MSMS==0)$loading)
unique(subset(cmps.s, MSMS==0&loading=="1000ng")$rtpost)
unique(subset(cmps.s, MSMS==0&loading=="1000ng"&rtpost==30)$rtpost)
subset(cmps.s, MSMS==0&loading=="1000ng"&rtpost==30)
xyplot(MSMS~rtpost|loading, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h"&hasMSMS==TRUE,
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,1), as.table=TRUE,
scale=list(y=list(relation="same")),
xlab="Retention Time (min)",ylab="Total MSMS")
xyplot(Avg~rtpost|loading*hasMSMS, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,2), as.table=TRUE,
par.settings=simpleTheme(pch=c(19,22),cex=0.8,lwd=0.8,col=c("red","blue")),
scale=list(y=list(relation="same", equispaced.log=TRUE,log=TRUE)),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Avg~rtpost|loading*hasMSMS, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,2), as.table=TRUE,
par.settings=simpleTheme(pch=c(19,22),cex=0.8,lwd=0.1,col=c("red","blue")),
scale=list(y=list(relation="same", equispaced.log=TRUE,log=TRUE)),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Avg~rtpost|loading*hasMSMS, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,2), as.table=TRUE,
par.settings=simpleTheme(pch=c(19,22),cex=0.1,lwd=0.1,col=c("red","blue")),
scale=list(y=list(relation="same", equispaced.log=TRUE,log=TRUE)),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Avg~rtpost|loading*hasMSMS, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a","g"), auto.key=list(space="top",columns=2),
layout=c(4,2), as.table=TRUE,
par.settings=simpleTheme(pch=c(19,22),cex=0.25,lwd=0.1,col=c("red","blue")),
scale=list(y=list(relation="same", equispaced.log=TRUE,log=TRUE)),
xlab="Retention Time (min)",ylab="Average Intensities")
xyplot(Avg~rtpost|loading*hasMSMS, group=additive,
data=cmps.s, subset=instrument=="Elite"&runtime=="1h",
type=c("p","a"), auto.key=list(space="top",columns=2),
layout=c(4,2), as.table=TRUE,
par.settings=simpleTheme(pch=c(19,22),cex=0.25,lwd=0.1,col=c("red","blue")),
scale=list(y=list(relation="same", equispaced.log=TRUE,log=TRUE)),
xlab="Retention Time (min)",ylab="Average Intensities")
source("http://bioconductor.org/biocLite.R")
biocLite("IPPD")
library("IPPD")
